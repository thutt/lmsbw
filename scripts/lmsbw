#!/bin/bash
#
# Copyright (c) 2012 Taylor Hutt, Logic Magicians Software
# 
# This program is free software: you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
__include_file="$(dirname ${0})/lmsbw-common"
[ -r "${__include_file}" ] || {                         \
    echo "${0}: '${__include_file}', does not exist.";  \
    exit -1;                                            \
}
source "${__include_file}";

function display_help ()
{
    cat <<EOF
${program} \\
   [--help               | \\
    --build-root         | \\
    --configuration      | \\
    --debug              | \\
    --parallel           | \\
    --progress           | \\
    --tarball-repository | \\
    --verbose            | \\
    --time]...             \\
   -- [make-options]...

  Builds a set of software based on a configuration.

  The non-option arguments to this program are passed directly to Gnu
  Make.

  To see the available targets: lmsbw targets
  To see available components : lmsbw components

  --help | -h                  : Show this help and exit
  --build-root                 : Specify LMSBW_BUILD_ROOT
  --configuration              : Full path to LMSBW configuration file
  --debug                      : Enable debugging LMSBW system
  --progress                   : Produce more progress messages during build
  --parallel                   : Specify LMSBW_PARALLEL_LEVEL (-j to Make)
  --tarball-repository         : Specify LMSBW_TARBALL_REPOSITORY
  --verbose                    : Enable more verbosity from build
  --time                       : Show elapsed time for component builds

EOF
}

function main ()
{
    local verbose="--silent";   # verbose not enabled => make should be silent.
    local lmsbw_error_file="/tmp/lmsbw-errors.${BASHPID}";
    local makeopts="--no-builtin-rules -j ${LMSBW_PARALLEL_LEVEL:-1} --no-print-directory";
    local debug;

    args=$(getopt -o h                          \
        --long help                             \
        --long build-root:                      \
        --long configuration:                   \
        --long debug                            \
        --long parallel:                        \
        --long progress                         \
        --long tarball-repository:              \
        --long time                             \
        --long verbose                          \
        -n "${program}"                         \
        -- "$@");


    if [ $? != 0 ] ; then
        fatal "${program}: Failed to canonicalize command line argument."
    fi;

    # Reset positional arguments to ${args}.
    eval set -- "$args"

    while true ; do
        case "$1" in
            -h|--help)
                display_help;
                exit 0 ;;

            --verbose)
                unset verbose;
                export LMSBW_VERBOSE=1
                shift 1 ;;

            --build-root)
                export LMSBW_BUILD_ROOT="${2}";
                shift 2 ;;

            --configuration)
                export LMSBW_CONFIGURATION_FILE="${2}";
                shift 2 ;;

            --debug)
                export LMSBW_DEBUG=1
                debug="--warn-undefined-variables";
                shift 1 ;;

            --parallel)
                LMSBW_PARALLEL_LEVEL="${2}";
                shift 2 ;;

            --progress)
                export LMSBW_PROGRESS=1
                shift 1 ;;

            --tarball-repository)
                export LMSBW_TARBALL_REPOSITORY="${2}";
                shift 2 ;;

            --time)
                export LMSBW_ELAPSED_TIME=1
                shift 1 ;;

            --) shift ;
                break ;;

            *) echo "Internal error: ${1}!" ;
                argument_failure="yes" ;
        esac
    done

    if [ -z "${LMSBW_BUILD_ROOT}" ] ; then
        fatal "${program}: Build output directory not specifid; use '--build-root'.";
    fi;

    start_seconds=$(date +%s)
    build_system_dir=$(readlink -f $(dirname ${0})/..);
    makefile=${build_system_dir}/wrapper/Makefile
    cmd="make ${makeopts} ${verbose} ${debug} -f ${makefile} ${@}";

    if [ ! -z "${LMSBW_VERBOSE}" ] ; then
        echo "${cmd}";
    fi;
    success="yes";
    ${cmd} "$@" 2>"${lmsbw_error_file}" || unset success;
    end_seconds=$(date +%s)

    # When using the 'seconds since epoch' notation (@), the time
    # printed will be in the local time zone.  We need to normalize
    # the 'HH:MM:SS' display to be based at GMT.  This is done by
    # subtracting the numnber of hours offset from GMT for the local
    # time ('%z').
    #
    elapsed_seconds=$((${end_seconds} - ${start_seconds}));
    elapsed_time=$(date -u -d "1970-01-01 ${elapsed_seconds} seconds" +"%H:%M:%S");
    if [ ! -z "${LMSBW_ELAPSED_TIME}" ] ; then
        echo -e  "\n++++ Build time: ${elapsed_time}  (seconds: ${elapsed_seconds})";
    fi;

    if [ -z "${success}" ] ; then
        echo -e "\n*****\n***** Failed; subdirectory failures:\n*****\n";
        cat "${lmsbw_error_file}";
        echo -e "\n";
    fi;

    if [ -e "${lmsbw_error_file}" ] ; then
        rm -f "${lmsbw_error_file}";
    fi;

    [ ! -z "${success}" ] ;
}

main ${@};
