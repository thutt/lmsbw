# Copyright (c) 2012 Taylor Hutt, Logic Magicians Software
#
# This program is free software: you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#


# This sample implements a product that has three different versions:
#
#   o lite        (delivers executables: lite)
#   o consumer    (delivers executables: lite, consumer)
#   o pro         (delivers executables: lite, consumer, pro)
#
#  You must set 'PRODUCT' in the environment to one of 'lite',
#  'consumer' or 'pro' when invoking LMSBW.
#
# The following load-configuration function uses symlinks in the
# product directory to load the components.  This method allows you to
# create different products and include a different mix of components
# in the final build for each product.


# load_configuration <pathname of configuration file declaring this function>
#
# The loaded configuration files use 'CURRENT_CONFIGURATION_FILE' to
# associate the loaded components with their configuration file.  This
# information is important for depdnency check; change the config file
# and its build process will be invoked.
#
define load_configuration
$(call assert,$(PRODUCT),PRODUCT must be one of '$(notdir $(wildcard $(dir $(1))products/*))')
$(call assert_exists,$(dir $(1))products/$(PRODUCT))
$(foreach cf,$(wildcard $(dir $(1))products/$(PRODUCT)/*),	\
          $(eval CURRENT_CONFIGURATION_FILE:=$(cf))		\
          $(eval include $(cf))					\
)
endef


# Set up the LMSBW_configuration associative array.
#
vv:=$(call set,LMSBW_configuration,load-configuration-function,load_configuration)

# Declare the type of components which will be needed.  There is only
# source in this sample, so only load support for 'source' components.
#
vv:=$(call set,LMSBW_configuration,component-build-support,source)
