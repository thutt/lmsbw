# Target OS menu
# Generated file, do not edit!!!

choice GEN_CHOICE_KERNEL
    bool
    prompt "Target OS"

config KERNEL_bare_metal
    bool
    prompt "bare-metal"
    depends on KERNEL_bare_metal_AVAILABLE
    select BARE_METAL
    help
      'Bare metal' refers to those programs that run without any kernel.
      
      You probably want to say 'y' here if you plan to use your compiler
      to build bootloaders. It is not yet suitable to build Linux kernels,
      though, because the APCI stuff relies on the target C library headers
      being available?!?!...

config KERNEL_linux
    bool
    prompt "linux"
    depends on KERNEL_linux_AVAILABLE
    select KERNEL_SUPPORTS_SHARED_LIBS
    help
      Build a toolchain targeting systems running Linux as a kernel.

config KERNEL_mingw32
    bool
    prompt "mingw32"
    depends on KERNEL_mingw32_AVAILABLE
    depends on EXPERIMENTAL && ( ARCH_x86 && ARCH_32 )
    select MINGW32
    help
      Build a toolchain targeting systems running Windows as host

endchoice

config KERNEL_bare_metal_AVAILABLE
    bool
    default y if BACKEND_KERNEL = "bare-metal" || BACKEND_KERNEL = "" || ! BACKEND
if KERNEL_bare_metal
config KERNEL
    default "bare-metal" if KERNEL_bare_metal
source "config/kernel/bare-metal.in"
endif

config KERNEL_linux_AVAILABLE
    bool
    default y if BACKEND_KERNEL = "linux" || BACKEND_KERNEL = "" || ! BACKEND
if KERNEL_linux
config KERNEL
    default "linux" if KERNEL_linux
source "config/kernel/linux.in"
endif

config KERNEL_mingw32_AVAILABLE
    bool
    default y if BACKEND_KERNEL = "mingw32" || BACKEND_KERNEL = "" || ! BACKEND
if KERNEL_mingw32
config KERNEL
    default "mingw32" if KERNEL_mingw32
source "config/kernel/mingw32.in"
endif
