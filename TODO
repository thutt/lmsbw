 o Need way to indicate where the install mtree manifest is located
   via lmsbwe.  Or, LMSBW_configuration associative array.
 o Allow multiple configuration files.
 o Sharing interfaces between between 'build' and 'image' modules out
   to be disallowed.  The compilers may be different, and their set of
   include directories should not intersect.
 o Add new target which reports on build space used per component
 o document that module.makefile is run in the directory where the
   configuration file is stored.
 o If debugging enabled, module.make should warn on undefined
   variables.
 o Need to be able to specify include directories in the install
   directory so that components can use them.  Or, should this be in
   the component.makefile?  This boils down being able to install
   things in a standard directory structure that is automatically
   accessible to all components.  CFLAGS could be pre-populated with
   "-I<install-sysroot>/usr/include".
 o Need to be able to specify an API to be exported from a module.
   This API will be checked in the install directory during building
   of dependent modules; if they are different, then rebuild
   dependents after cleaning them.
 o What about Windows toolchains?
 o Document that if no toolchain is set, the host toolchain is used.
 o Add lmsbw_ prefix to module functions
 o document declare_source_component
 o document declare_component_install_target
 o document declare_component_build_target
 o document declare_component_api
 o document each file of LMSBW_<component>
 o document LMSBW_<component>[source-api]
 o document LMSBW_<component>[binary-api]
 o document LMSBW_<component>[changed-api]
 o Make a target which will make a report of indirect dependents.
   a -> b -> c.  c is indirectly dependent on a.
 o When indirect dependencies code is written, update
   lmsbw_api_changed_failure to incorporate it.
 o Add 'indirect-dependencies' list to LMSBW_<component>
 o Document all errors
 o Need document on adding a new 'kind' of component.
 o Need to have a source API & a binary API.  Changes to the binary
   API will cause dependent modules to be rebuilt w/o clean.  The
   binary API is for static linking.
 o Document binary API.
 o Test source API changes.
 o Test binary API changes.
 o Must be able to ignore binary-api or source-api changes for
   dependent modules.  Some might be dependent one or the other, but
   not both.
 o Add 'gdb' verb to load a component's binary output in gdb.
 o Remove TARBALL repository.
 o Document overriding component rules, such as 'install' for cases
   when the component does not have an 'install' rule.
 o LMSBW should pass unrecognized arguments directly to Make.  Maybe '--'?
 o The help message for lmsbw is horrible.
 o Detecting a source API change has not been written yet.  Must mtree
   api directories.  Must document.
 o Implement binary-api-mtree-manifest
 o Implement binary-api-changed.
 o Implement binary-api.
 o Document how to override the build & install & configure rules.
   Look for 'chap:overriding' in variables.tex
 o Error messages should print module & component names for disambiguation.
 o Figure out why generate-rules.mk causes errors when put in
   lmsbw-system.mk.
 o Document component.makefile-specific defines are LMSBW_C_<id>.
 o Document that global toolchain settings can be harmful when cross
   compiling.  Components built for use in the build process will be
   built with the global compiler, and thus be unusable.
 o Document toolchain macros CC, GXX, et al.
 o Install directory should be unique for toolchain?  If global, yes.
   If not global, no.
 o LMSBW_components does not need to be an associative array any longer; module has been removed.
 o Document LMSBW_C_TOOLCHAINS_ROOT, and LMSBW_C_TOOLCHAIN
 o Support LDFLAGS wrapping per-component.
 o Make module rules file & building dependent on the configuration file.
